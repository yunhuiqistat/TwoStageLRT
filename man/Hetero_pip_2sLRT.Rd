% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Hetero_pip_2sLRT.R
\name{Hetero_pip_2sLRT}
\alias{Hetero_pip_2sLRT}
\title{Simulation Function for 2sLRT, Poisson LRT and Estimation Method.}
\usage{
Hetero_pip_2sLRT(
  n_genes,
  n_families,
  mu_female,
  mu_male,
  effect_factor,
  female_norm_factor,
  male_norm_factor,
  hybrid_norm_factor,
  true_norm = c(TRUE, FALSE),
  MP_DISP_func,
  true_disp = c("None", TRUE, FALSE),
  n_fam_thres = 20,
  gene_groups_no = 3,
  repetition = 150,
  plot = TRUE,
  filename = NULL
)
}
\arguments{
\item{n_genes}{number of genes.}

\item{n_families}{number of families.}

\item{female_norm_factor}{a vector with normalization factors for n_families females.
if norm_factor == NULL, norm_factor will be all 1;
if provided and are not all 1, DESeq normalization factors will be used in 2sLRT test.
if provided with length = 2, norm_factor will be simulated from Unif(norm_factor[1], norm_factor[2]), DESeq will also be used.
if provided with length = 1, all samples share the same normalization factor, DESeq will not be used.}

\item{male_norm_factor}{a vector with normalization factors for n_families hybrids, same format as described in female_norm_factor.}

\item{hybrid_norm_factor}{a vector with normalization factors for n_families males, same format as described in female_norm_factor.}

\item{MP_DISP_func:}{character name of function describing the relationship between mid-parent and dispersion parameters.}

\item{mu_female:}{a matrix containing mean expression count of female samples for all genes and all families with nrow = n_genes, ncol = n_families.}

\item{mu_male:}{a matrix containing mean count of male samples for n_genes and n_families.
if a vector with length = 2, mean mu (not Cmu) for all genes and all families in male sample will be simulated from Gamma(mu_male[1], mu_male[2]) for shape and rate, thus the mean of gamma distribution is shape/rate.
if a vector with length = 1, all male samples share the same mean count.}

\item{effect_factor:}{a matrix containing how many times more mu_{g3} is of (mu_{g1} + mu_{g2})/2, for null cases, set it to be 0.
if a vector with length = 1, all families share the same effect size.}

\item{true_disp:}{"None" for Pois LRT, TRUE for NB LRT with true disp, FALSE for NB LRT with estimated disp.}

\item{true_norm:}{TRUE for using true C_i in tests, FALSE for using DESeq normalization factors in tests}

\item{n_fam_thres:}{genes with at least n_fam_thres all-null families will be used for dispersion estimation, otherwise, will use loess prediction to get dispersion, default is 20}

\item{gene_groups_no:}{the number of clusters for genes, default is 3.}

\item{repetition:}{the number of replications for simulation}

\item{filename:}{if NULL, no save of any plots, if specified, will save plots.}
}
\value{
a list including pvalue matrix and adjusted pvalue matrix (computed using BH method).
}
\description{
This function simulates n_families with each family includes three counts (i=1-female, 2-male, 3-hybrid) from Negative Binomial distribution for n_genes.
Then 2sLRT, Poisson based LRT for MPH and Estimation method as described in the paper are applied to check mid-parent heterosis gene-family combinations.
The hypotheses for gene g in family h is Hgh0: mu_{gh1} + mu_{gh2} = 2mu_{gh3} vs Hgh1: otherwise.
The effect size under alternative is specified by effect factor - how many times more mu_gh3 is of (mu_gh1 + mu_gh2) / 2, 0 = Hgh0.
}
\examples{
library(TwoStageLRT)
mu_female_dense <- "matrix(rgamma(case$n_genes*case$n_families, shape = 30, rate=runif(case$n_genes, 0.05, 0.2)),nrow=case$n_genes, ncol=case$n_families)"
effect_factor_dense <- "rbind(matrix(ifelse(rbinom(case$n_genes/4*case$n_families, 1, 0.05)==1, case$sig_pos, 0),nrow = case$n_genes/4, ncol = case$n_families), matrix(ifelse(rbinom(case$n_genes/4*case$n_families, 1, 0.05)==1, case$sig_neg, 0),nrow = case$n_genes/4, ncol = case$n_families), matrix(ifelse(rbinom(case$n_genes/4*case$n_families, 1, 0.9)==1, case$sig_pos, 0),nrow = case$n_genes/4, ncol = case$n_families), matrix(ifelse(rbinom(case$n_genes/4*case$n_families, 1, 0.9)==1, case$sig_neg, 0),nrow = case$n_genes/4, ncol = case$n_families))"
case <- list(n_genes = 100, n_families = 150,
  sig_pos = 2, sig_neg = -2/3,
  mu_female = mu_female_dense,
  mu_male = "case$mu_female", # for same mu_female and mu male, set to be "case$mu_female"
  effect_factor = effect_factor_dense,
  female_norm_factor = c(0.8, 1.3), male_norm_factor = c(0.8, 1.3), hybrid_norm_factor = c(0.8, 1.3),
  MP_DISP_func = "inverse_func", true_disp = FALSE, true_norm = FALSE,
  n_fam_thres = 10, gene_groups_no = 2, repetition = 3, plot = TRUE, filename = NULL)
print(case)
if(is.character(case$mu_female)){case$mu_female <- eval(parse(text = case$mu_female))}
if(is.character(case$mu_male)){case$mu_male <- eval(parse(text = case$mu_male))}
if(is.character(case$effect_factor)){case$effect_factor <- eval(parse(text = case$effect_factor))}
res <- Hetero_pip_2sLRT(n_genes = case$n_genes, n_families = case$n_families,
  mu_female = case$mu_female, mu_male = case$mu_male,
  effect_factor = case$effect_factor,
  female_norm_factor = case$female_norm_factor,
  male_norm_factor = case$male_norm_factor,
  hybrid_norm_factor = case$hybrid_norm_factor,
  true_norm = case$true_norm,
  MP_DISP_func = case$MP_DISP_func, true_disp = case$true_disp,
  n_fam_thres = case$n_fam_thres,
  gene_groups_no = case$gene_groups_no,
  repetition = case$repetition, plot = case$plot,
  filename = case$filename)
print(res)
}
